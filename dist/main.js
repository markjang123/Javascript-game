/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/bullet.js":
/*!***********************!*\
  !*** ./src/bullet.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _movable_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movable_object */ \"./src/movable_object.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\r\n\r\n\r\n\r\n\r\nclass Bullet extends _movable_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(x, y, radius, color, vel){\r\n        super(x, y, radius, color, vel)\r\n        this.hitpoint = {\r\n            x: this.x + this.width / 2,\r\n            y: this.y\r\n        }\r\n        this.radius = 10\r\n        this.color = \"white\"\r\n        this.isMoving = true\r\n        this.distance = 0\r\n        this.maxDistance = 400\r\n        this.x = x\r\n        this.y = y\r\n        this.vel = 2\r\n    }\r\n    shoot(ctx, dir){\r\n        // window.requestAnimationFrame(this.shoot)\r\n        // let bulletInterval = window.setInterval(() => {\r\n        //     if (!this.isMoving || this.distance >= this.maxDistance){\r\n        //         const bulletIndex = BULLETS.indexOf(this);\r\n        //         if (bulletIndex > -1) {\r\n        //             BULLETS.splice(bulletIndex, 1);\r\n        //             // ctx.clearRect(this.x, this.y - 1, this.width + 1, this.height + 2)\r\n        //             GAME[0].draw()\r\n        //             window.clearInterval(bulletInterval)\r\n        //         }\r\n        //     } else {\r\n        //         this.move(ctx, dir)\r\n        //         this.distance += this.vel\r\n        //         this.draw(ctx)\r\n        //     }\r\n        // }, 1000 / 60\r\n        // )\r\n        // if (!this.isMoving || this.distance >= this.maxDistance){\r\n        //             const bulletIndex = BULLETS.indexOf(this);\r\n        //             if (bulletIndex > -1) {\r\n        //                 BULLETS.splice(bulletIndex, 1);\r\n        //                 GAME[0].draw()\r\n        //                 cancelAnimationFrame(frameID)\r\n        //             } \r\n        //         } else {\r\n        //             this.move(ctx, dir)\r\n        //             this.distance += this.vel\r\n        //             this.draw(ctx)\r\n        //             const frameID = requestAnimationFrame(this.shoot(ctx, dir))\r\n        //         }\r\n\r\n        const animateId = requestAnimationFrame(() => {\r\n            if (!this.isMoving || this.distance >= this.maxDistance){\r\n                const bulletIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].indexOf(this);\r\n                    _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].splice(bulletIndex, 1);\r\n                    _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n                    cancelAnimationFrame(animateId)\r\n            } else {\r\n                this.move(ctx, dir)\r\n                this.distance += this.vel\r\n                this.draw(ctx)\r\n                this.shoot(ctx, dir)\r\n            }\r\n        })\r\n    }\r\n    checkHitPlayer(player){\r\n        debugger\r\n        return this.getDistance(this.x, this.y, player.x, player.y) <= this.radius ||\r\n               this.getDistance(this.x, this.y, player.x + player.width, player.y + player.height) <= this.radius ||\r\n               this.getDistance(this.x, this.y, player.x, player.y + player.height) <= this.radius\r\n    }\r\n    getDistance(x1, y1, x2, y2){\r\n        const x = Math.abs(x1 - x2)\r\n        const y = Math.abs(y1 - y2)\r\n        return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\r\n    }\r\n    checkOutboundsTop(){\r\n        return this.y < 0\r\n    }\r\n    checkOutboundsBottom(){\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        return this.y > canvas.height \r\n    }\r\n    checkOutboundsRight(){\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        return this.x > canvas.width\r\n    }\r\n    checkOutboundsLeft(){\r\n        return this.x < 20\r\n    }\r\n    draw(ctx){\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, 10, 0, 2 * Math.PI);\r\n        let gradient = ctx.createRadialGradient(this.x, this.y, 5, this.x, this.y, 8);\r\n        gradient.addColorStop(0, \"fuchsia\");\r\n        gradient.addColorStop(1, \"purple\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fill();\r\n        if (this.checkHitPlayer(_game__WEBPACK_IMPORTED_MODULE_2__[\"PLAYER\"][0])){\r\n            // PLAYER[0].blink(ctx)\r\n            // PLAYER[0].color = \"red\"\r\n            // setTimeout(() => PLAYER[0].color = \"white\", 100)\r\n            _game__WEBPACK_IMPORTED_MODULE_2__[\"PLAYER\"][0].blink()\r\n            this.isMoving = false\r\n            const bulletIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].indexOf(this)\r\n            _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].splice(bulletIndex, 1)\r\n            _game__WEBPACK_IMPORTED_MODULE_2__[\"PLAYER\"][0].hitPoints -= 1\r\n            if (_game__WEBPACK_IMPORTED_MODULE_2__[\"PLAYER\"][0].hitPoints <= 0) {\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].gameOver()\r\n            } \r\n            // GAME[0].draw()\r\n        }\r\n        // ctx.fillRect(this.x, this.y, this.width, this.height)\r\n        // for(const enemy of ENEMIES){\r\n        //     debugger\r\n        //     if (this.checkHit(enemy.x, enemy.y, enemy.height, enemy.width)){\r\n        //         enemy.hitPoints -= 1\r\n        //         // alert(enemy.hitPoints)\r\n        //         if (enemy.hitPoints <= 0) {\r\n        //             enemy.isMoving = false\r\n        //             const enemyIndex = ENEMIES.indexOf(enemy)\r\n        //             ENEMIES.splice(enemyIndex, 1)\r\n        //         } else {\r\n        //             enemy.blink(ctx)\r\n        //         }\r\n        //         const laserIndex = LASERS.indexOf(this);\r\n        //         if (laserIndex > -1) {\r\n        //             LASERS.splice(laserIndex, 1);\r\n        //         }\r\n        //         this.isMoving = false\r\n        //         GAME[0].draw()\r\n        //     }\r\n        // }\r\n        // for(const object of IMMOVABLE){\r\n        //     debugger\r\n        //     if (this.checkHit(object.x, object.y, object.height, object.width)){\r\n        //         object.hitPoints -= 1\r\n        //         // alert(object.hitPoints)\r\n        //         if (object.hitPoints <= 0) {\r\n        //             const objectIndex = IMMOVABLE.indexOf(object)\r\n        //             IMMOVABLE.splice(objectIndex, 1)\r\n        //         } else {\r\n        //             object.blink(ctx)\r\n        //         }\r\n        //         const laserIndex = LASERS.indexOf(this);\r\n        //         if (laserIndex > -1) {\r\n        //             LASERS.splice(laserIndex, 1);\r\n        //         }\r\n        //         this.isMoving = false\r\n        //         GAME[0].draw()\r\n        //     }\r\n        // }\r\n     \r\n    }\r\n    startMoving(ctx){\r\n        this.move(ctx, \"DOWN\")\r\n        this.draw(ctx)\r\n        requestAnimationFrame(this.startMoving(ctx))\r\n    }\r\n    move(ctx, direction){\r\n        switch(direction){\r\n            case \"RIGHT\":\r\n                this.x = this.wrap(this.x + this.vel)\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"LEFT\":\r\n                this.x = this.x - this.vel\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"UP\":\r\n                // ctx.clearRect(0, 0, 1080, 1920)\r\n                // ctx.clearRect(this.x, this.y - 1, this.width + 1, this.height + 2)\r\n                this.y = this.y - this.vel\r\n                this.hitpoint.y = this.y\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"DOWN\":\r\n                this.y = this.y + this.vel\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n                break;\r\n        }\r\n        // ENEMIES.forEach(enemy => console.log(enemy))\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bullet);\n\n//# sourceURL=webpack:///./src/bullet.js?");

/***/ }),

/***/ "./src/enemy.js":
/*!**********************!*\
  !*** ./src/enemy.js ***!
  \**********************/
/*! exports provided: INTERVALS, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INTERVALS\", function() { return INTERVALS; });\n/* harmony import */ var _movable_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movable_object */ \"./src/movable_object.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bullet */ \"./src/bullet.js\");\n\r\n\r\n\r\n\r\nconst INTERVALS = []\r\nclass Enemy extends _movable_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(x, y, height, width, color, vel){\r\n        super(x, y, height, width, color, vel)\r\n        this.x = x\r\n        this.y = y\r\n        this.height = height\r\n        this.width = width\r\n        this.color= \"red\"\r\n        this.vel = this.getRandomInRange(20, 40)\r\n        this.RIGHT = \"RIGHT\"\r\n        this.LEFT = \"LEFT\"\r\n        this.UP = \"UP\"\r\n        this.DOWN = \"DOWN\"\r\n        this.canFire = true\r\n        const enemyShootInterval = setInterval(() => this.shoot(), 500)\r\n        INTERVALS.push(enemyShootInterval)\r\n        const enemyMoveInterval = setInterval(() => this.move(_game__WEBPACK_IMPORTED_MODULE_2__[\"CTX\"][0], this.dir), 250)\r\n        INTERVALS.push(enemyMoveInterval)\r\n        this.dir = \"LEFT\"\r\n        this.bindKeys()\r\n    }\r\n     getRandomInRange(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n      }\r\n    shoot(){\r\n        if (this.canFire){\r\n            // const b = new Bullet(this.x, this.y)\r\n            // BULLETS.push(b)\r\n            // b.draw(this.ctx)\r\n            // requestAnimationFrame(() => b.shoot(this.ctx, \"DOWN\"))\r\n            // const a = new Bullet(this.x + this.width, this.y)\r\n            // BULLETS.push(a)\r\n            // a.draw(this.ctx)\r\n            // requestAnimationFrame(() => a.shoot(this.ctx, \"DOWN\"))\r\n            const c = new _bullet__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.x, this.y + this.height)\r\n            _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].push(c)\r\n            c.draw(_game__WEBPACK_IMPORTED_MODULE_2__[\"CTX\"][0])\r\n            requestAnimationFrame(() => c.shoot(_game__WEBPACK_IMPORTED_MODULE_2__[\"CTX\"][0], \"DOWN\"))\r\n            const d = new _bullet__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.x + this.width, this.y + this.height)\r\n            _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].push(d)\r\n            d.draw(_game__WEBPACK_IMPORTED_MODULE_2__[\"CTX\"][0])\r\n            requestAnimationFrame(() => d.shoot(_game__WEBPACK_IMPORTED_MODULE_2__[\"CTX\"][0], \"DOWN\"))\r\n        }\r\n    }\r\n    rotate(ctx){\r\n        ctx.save();\r\n        ctx.translate(400, 400);\r\n        ctx.rotate(20 * Math.PI / 180);\r\n        this.draw(ctx)\r\n        // ctx.translate(-(20/2), -(30/2));\r\n        ctx.restore\r\n    }\r\n    // checkCollision(object){\r\n    //     let top = this.y\r\n    //     let bottom = this.y + this.height\r\n    //     let left = this.x\r\n    //     let right = this.x + this.width\r\n    //     if (top > object.y + object.height || right < object.x || left > object.x + object.width || bottom < object.y){\r\n    //         return false\r\n    //     }\r\n    //     return true\r\n    // }\r\n    bindKeys(){\r\n        document.addEventListener(\"keydown\", e => {\r\n            if (e.key === \"f\"){\r\n                this.shoot()\r\n            }\r\n        })\r\n    }\r\n    move(ctx, direction){\r\n        debugger\r\n        switch(direction){\r\n            case \"RIGHT\":\r\n                debugger\r\n                this.x = this.x + this.vel\r\n                if (this.checkOutboundsRight()){\r\n                    this.x = this.x - this.vel\r\n                    this.dir = \"LEFT\"\r\n                }\r\n                // ENEMIES.forEach(enemy => {\r\n                //     if (this.checkCollision(enemy)){\r\n                //         this.x = this.x - this.vel\r\n                //     } \r\n                // })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"LEFT\":\r\n                debugger\r\n                this.x = this.x - this.vel\r\n                if (this.checkOutboundsLeft()){\r\n                    this.x = this.x + this.vel\r\n                    this.dir = \"RIGHT\"\r\n                }\r\n                // ENEMIES.forEach(enemy => {\r\n                //     if (this.checkCollision(enemy)){\r\n                //         this.x = this.x + this.vel\r\n                //     } \r\n                // })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"UP\":\r\n                debugger\r\n                this.y = this.y - this.vel\r\n                if (this.checkOutboundsTop()){\r\n                    this.y = this.y + this.vel\r\n                }\r\n                // ENEMIES.forEach(enemy => {\r\n                //     if (this.checkCollision(enemy)){\r\n                //         this.y = this.y + this.vel\r\n                //     } \r\n                // })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"DOWN\":\r\n                debugger\r\n                this.y = this.y + this.vel\r\n                if (this.checkOutboundsBottom()){\r\n                    this.y = this.y - this.vel\r\n                }\r\n                // ENEMIES.forEach(enemy => {\r\n                //     if (this.checkCollision(enemy)){\r\n                //         this.y = this.y - this.vel\r\n                //     } \r\n                // })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n        }\r\n    }\r\n   \r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Enemy);\n\n//# sourceURL=webpack:///./src/enemy.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! exports provided: ENEMIES, LASERS, PLAYER, OBJECTIVE, OTHER, BULLETS, LISTENERS, FUNCTIONS, CTX, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ENEMIES\", function() { return ENEMIES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LASERS\", function() { return LASERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PLAYER\", function() { return PLAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OBJECTIVE\", function() { return OBJECTIVE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OTHER\", function() { return OTHER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BULLETS\", function() { return BULLETS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LISTENERS\", function() { return LISTENERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FUNCTIONS\", function() { return FUNCTIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CTX\", function() { return CTX; });\n/* harmony import */ var _movable_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movable_object */ \"./src/movable_object.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _laser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./laser */ \"./src/laser.js\");\n/* harmony import */ var _instructions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instructions */ \"./src/instructions.js\");\n/* harmony import */ var _objective__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./objective */ \"./src/objective.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bullet */ \"./src/bullet.js\");\n/* harmony import */ var _enemy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./enemy */ \"./src/enemy.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Game {\r\n    constructor(ctx, level){\r\n        this.ctx = ctx\r\n        CTX.push(this.ctx)\r\n        this.level = level.level\r\n        this.enemies = level.enemies\r\n    }\r\n    draw(){\r\n        this.ctx.clearRect(0, 0, 5000, 5000)\r\n        PLAYER.forEach(player => player.draw(this.ctx))\r\n        // alert(ENEMIES)\r\n        OTHER.forEach(other => other.draw(this.ctx))\r\n        ENEMIES.forEach(enemy => enemy.draw(this.ctx))\r\n        OBJECTIVE.forEach(object => object.draw(this.ctx))\r\n        BULLETS.forEach(bullet => bullet.draw(this.ctx))\r\n    }\r\n   \r\n    start(){\r\n        const obj = new _objective__WEBPACK_IMPORTED_MODULE_4__[\"default\"]()\r\n        obj.draw(this.ctx)\r\n        OBJECTIVE.push(obj)\r\n        const player = new _player__WEBPACK_IMPORTED_MODULE_1__[\"default\"](1, 1, 1, 1, 1, 1, this.ctx)\r\n        debugger\r\n        PLAYER.push(player)\r\n        player.draw(this.ctx)\r\n        const handleClick = () => {player.shoot()}\r\n        FUNCTIONS.push(handleClick)\r\n        document.addEventListener(\"click\", handleClick)\r\n        const instructions = new _instructions__WEBPACK_IMPORTED_MODULE_3__[\"default\"](`Level ${this.level}`, \"30px Arial\")\r\n        instructions.draw(this.ctx)\r\n        OTHER.push(instructions)\r\n        // const bullet = new Bullet(300, 100)\r\n        // BULLETS.push(bullet)\r\n        // bullet.draw(this.ctx)\r\n        // window.setInterval(() => {\r\n        //     bullet.move(this.ctx, \"DOWN\")\r\n        // }, 1000 / 60)\r\n        \r\n        // bullet.startMoving(this.ctx)\r\n        // const repeat = () => {\r\n        //     window.requestAnimationFrame(() => {\r\n        //         bullet.move(this.ctx, \"DOWN\")\r\n        //         bullet.draw(this.ctx)\r\n        //         repeat()\r\n        //     })\r\n        // }\r\n        // repeat()\r\n\r\n        this.enemies.forEach(enemy => {\r\n            let newEnemy = new _enemy__WEBPACK_IMPORTED_MODULE_6__[\"default\"](enemy.x, enemy.y, enemy.height, enemy.width)\r\n            ENEMIES.push(newEnemy)\r\n        })\r\n       this.drawEnemies()\r\n    }\r\n    victory(){\r\n        // console.log(LISTENERS)\r\n        // this.ctx.clearRect(0, 0, 5000, 5000)\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        document.removeEventListener(\"click\", FUNCTIONS[0], {useCapture: false, passive: false, once: false})\r\n        _enemy__WEBPACK_IMPORTED_MODULE_6__[\"INTERVALS\"].forEach(interval => clearInterval(interval))\r\n        // LISTENERS.forEach(listener => removeEventListener(listener.type, listener))\r\n        LASERS.forEach(laser => laser.isMoving = false)\r\n        OTHER.length = 0\r\n        FUNCTIONS.length = 0\r\n        _index__WEBPACK_IMPORTED_MODULE_7__[\"GAME\"].length = 0 \r\n        ENEMIES.length = 0\r\n        BULLETS.length = 0\r\n        LASERS.length = 0\r\n        PLAYER.length = 0\r\n        this.draw()\r\n        const levelComplete = document.querySelector(\".level-complete\")\r\n        levelComplete.style.display = \"block\"\r\n        setTimeout(() => {\r\n            levelComplete.style.display = \"none\"\r\n            // let canvas = document.getElementById(\"game-canvas\")\r\n            // canvas.remove()\r\n            // let nextCanvas = document.createElement(\"CANVAS\")\r\n            // nextCanvas.setAttribute(\"id\", \"game-canvas\")\r\n            // nextCanvas.setAttribute(\"class\", \"next-game-canvas\")\r\n            // nextCanvas.setAttribute(\"height\", \"300\")\r\n            // nextCanvas.setAttribute(\"width\", \"300\")\r\n            // let ctx = nextCanvas.getContext(\"2d\")\r\n            const nextLevel = _index__WEBPACK_IMPORTED_MODULE_7__[\"LEVELS\"].find(obj => obj.level === this.level + 1)\r\n            if (nextLevel){\r\n                const nextGame = new Game(this.ctx, nextLevel)\r\n                _index__WEBPACK_IMPORTED_MODULE_7__[\"GAME\"].push(nextGame)\r\n                nextGame.start()\r\n            } else {\r\n                alert(\"You Beat All the Levels!\")\r\n            }\r\n        }, 1500)\r\n        // this.start(2)\r\n    }\r\n    gameOver(){\r\n        // const gameOverCanvas = document.getElementById(\"game-over-canvas\")\r\n        // const gameOverCtx = gameOverCanvas.getContext(\"2d\")\r\n        // const canvas = document.getElementById(\"game-canvas\")\r\n        // canvas.remove()\r\n        const gameOver = document.querySelector(\".game-over-container\")\r\n        gameOver.style.display = \"block\"\r\n        // ENEMIES.splice(0, ENEMIES.length)\r\n        // LASERS.splice(0, LASERS.length)\r\n        // PLAYER.splice(0, PLAYER.length)\r\n        // OBJECTIVE.splice(0, OBJECTIVE.length)\r\n        // OTHER.splice(0, OTHER.length)\r\n        // BULLETS.splice(0, BULLETS.length)\r\n        // this.ctx.clearRect(0, 0, 5000, 5000)\r\n        // const instructions = new Instructions(\"30px Arial\")\r\n        // OTHER.push(instructions)\r\n        // instructions.draw(this.ctx)\r\n        // ctx.fillStyle = \"white\"\r\n        // ctx.font = \"30px Arial\"\r\n        // ctx.fillText(\"GAME OVER\", 100, 100)\r\n\r\n    }\r\n    drawEnemies(){\r\n        ENEMIES.forEach(enemy => {\r\n            enemy.draw(this.ctx)\r\n        })\r\n    }\r\n    moveEnemies(){\r\n        ENEMIES.forEach(enemy => enemy.startMoving(this.ctx))\r\n    }\r\n}\r\n\r\nconst ENEMIES = []\r\nconst LASERS = []\r\nconst PLAYER = []\r\nconst OBJECTIVE = []\r\nconst OTHER = []\r\nconst BULLETS = []\r\nconst LISTENERS = []\r\nconst FUNCTIONS = []\r\nconst CTX = []\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/immovable_object.js":
/*!*********************************!*\
  !*** ./src/immovable_object.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass ImmoveableObject {\r\n    constructor(x, y, height, width, color) {\r\n        \r\n        this.x = x;\r\n        this.y = y;\r\n        this.height = height;\r\n        this.width = width;\r\n        this.color = color\r\n        this.hitPoints = 10\r\n    }\r\n    draw(ctx){\r\n        \r\n        ctx.fillStyle = this.color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height)\r\n    }\r\n    blink(ctx){\r\n        let blinkCount = 0\r\n        let blinkInterval = window.setInterval(() => {\r\n            if (blinkCount < 2) {\r\n                this.color === \"white\" ? this.color = \"red\" : this.color = \"white\"\r\n                this.draw(ctx)\r\n                blinkCount ++\r\n                console.log(\"BLINKING\")\r\n            } else {\r\n                window.clearInterval(blinkInterval)\r\n            }\r\n        }, 50)\r\n    }\r\n \r\n  \r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImmoveableObject);\n\n//# sourceURL=webpack:///./src/immovable_object.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: GAME, LEVELS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME\", function() { return GAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEVELS\", function() { return LEVELS; });\n/* harmony import */ var _movable_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movable_object */ \"./src/movable_object.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"Space\"){\r\n            let instructions = document.querySelector('.instructions-1')\r\n            instructions.remove()\r\n            const canvas = document.getElementById(\"game-canvas\")\r\n            const ctx = canvas.getContext(\"2d\")\r\n            const game = new _game__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx, LEVELS[0])\r\n            GAME.push(game)\r\n            game.start()\r\n        }\r\n    })\r\n})\r\nconst GAME = []\r\nconst LEVELS = [\r\n    {\r\n        level: 1,\r\n        enemies :[  {x: 400, y: 100, height: 50, width: 50},\r\n                    {x: 500, y: 150, height: 50, width: 50}\r\n                 ]\r\n    },\r\n    {\r\n        level: 2,\r\n        enemies :[  {x: 400, y: 100, height: 50, width: 50},\r\n                    {x: 500, y: 150, height: 50, width: 50},\r\n                    {x: 500, y: 200, height: 50, width: 50},\r\n                 ]\r\n    }\r\n]\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/instructions.js":
/*!*****************************!*\
  !*** ./src/instructions.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Instructions {\r\n    constructor(text,font){\r\n        this.font = font\r\n        this.text = text\r\n    }\r\n    draw(ctx){\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = this.font;\r\n        ctx.fillText(this.text, 10, 50)\r\n    }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Instructions);\r\n\n\n//# sourceURL=webpack:///./src/instructions.js?");

/***/ }),

/***/ "./src/laser.js":
/*!**********************!*\
  !*** ./src/laser.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _movable_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movable_object */ \"./src/movable_object.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\r\n\r\n\r\n\r\n\r\nclass Laser extends _movable_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(x, y, height, width, color, vel){\r\n        super(x, y, height, width, color, vel)\r\n        this.hitpoint = {\r\n            x: this.x + this.width / 2,\r\n            y: this.y\r\n        }\r\n        this.isMoving = true\r\n        this.distance = 0\r\n        this.maxDistance = 900\r\n    }\r\n    shoot(ctx){\r\n        // window.requestAnimationFrame(this.shoot)\r\n        // let shootInterval = window.setInterval(() => {\r\n        //     if (!this.isMoving || this.distance >= this.maxDistance){\r\n        //         const laserIndex = LASERS.indexOf(this);\r\n        //         if (laserIndex > -1) {\r\n        //             LASERS.splice(laserIndex, 1);\r\n        //             ctx.clearRect(this.x, this.y - 1, this.width + 1, this.height + 2)\r\n        //             window.clearInterval(shootInterval)\r\n        //         }\r\n        //     } else {\r\n        //         this.move(ctx, \"UP\")\r\n        //         this.distance += this.vel\r\n        //         this.draw(ctx)\r\n        //     }\r\n        //     // ctx.clearRect(0, 0, 1080, 1920)\r\n        // }, 100\r\n        // )\r\n\r\n        const animateId = requestAnimationFrame(() => {\r\n            if (!this.isMoving || this.distance >= this.maxDistance){\r\n                const laserIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].indexOf(this);\r\n                if (laserIndex > -1) {\r\n                    _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].splice(laserIndex, 1);\r\n                    _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n                    cancelAnimationFrame(animateId)\r\n                } \r\n            } else {\r\n                this.move(ctx, \"UP\")\r\n                this.distance += this.vel\r\n                this.draw(ctx)\r\n                this.shoot(ctx)\r\n            }\r\n        })\r\n    }\r\n    checkHit(x, y, height, width){\r\n        return this.hitpoint.x >= x && this.hitpoint.x <= x + width && this.hitpoint.y >= y && this.hitpoint.y <= y + height\r\n    }\r\n    checkHitCircle(x, y, radius){\r\n        return this.getDistance(this.hitpoint.x, this.hitpoint.y, x, y) < radius || \r\n               this.getDistance(this.hitpoint.x, this.hitpoint.y + (this.height / 2), x, y) < radius\r\n    }\r\n    getDistance(x1, y1, x2, y2){\r\n        const x = Math.abs(x1 - x2)\r\n        const y = Math.abs(y1 - y2)\r\n        return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\r\n    }\r\n    draw(ctx){\r\n        debugger\r\n       \r\n        ctx.fillStyle = this.color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height)\r\n        for(const enemy of _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"]){\r\n            debugger\r\n            if (this.checkHit(enemy.x, enemy.y, enemy.height, enemy.width)){\r\n                enemy.hitPoints -= 1\r\n                // alert(enemy.hitPoints)\r\n                if (enemy.hitPoints <= 0) {\r\n                    enemy.isMoving = false\r\n                    enemy.canFire = false\r\n                    const enemyIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"].indexOf(enemy)\r\n                    _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"].splice(enemyIndex, 1)\r\n                } else {\r\n                    enemy.blink(ctx)\r\n                }\r\n                const laserIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].indexOf(this);\r\n                if (laserIndex > -1) {\r\n                    _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].splice(laserIndex, 1);\r\n                }\r\n                this.isMoving = false\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n            }\r\n        }\r\n        for(const object of _game__WEBPACK_IMPORTED_MODULE_2__[\"OBJECTIVE\"]){\r\n            debugger\r\n            if (this.checkHit(object.x, object.y, object.height, object.width)){\r\n                object.hitPoints -= 1\r\n                // alert(object.hitPoints)\r\n                if (object.hitPoints <= 0) {\r\n                    const objectIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"OBJECTIVE\"].indexOf(object)\r\n                    _game__WEBPACK_IMPORTED_MODULE_2__[\"OBJECTIVE\"].splice(objectIndex, 1)\r\n                    _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].victory()\r\n                } else {\r\n                    object.blink(ctx)\r\n                }\r\n                const laserIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].indexOf(this);\r\n                if (laserIndex > -1) {\r\n                    _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].splice(laserIndex, 1);\r\n                }\r\n                this.isMoving = false\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n            }\r\n        }\r\n        for(const bullet of _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"]){\r\n            debugger\r\n            if (this.checkHitCircle(bullet.x, bullet.y, bullet.radius)){\r\n                debugger\r\n                bullet.isMoving = false\r\n                const bulletIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].indexOf(bullet)\r\n                _game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].splice(bulletIndex, 1)   \r\n                const laserIndex = _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].indexOf(this);\r\n                if (laserIndex > -1) {\r\n                    _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].splice(laserIndex, 1);\r\n                }\r\n                this.isMoving = false\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n            }\r\n        }\r\n     \r\n    }\r\n    move(ctx, direction){\r\n        debugger\r\n        switch(direction){\r\n            case \"RIGHT\":\r\n                debugger\r\n                ctx.clearRect(this.x, this.y - 1, this.width, this.height + 2)\r\n                this.x = this.wrap(this.x + this.vel)\r\n                break;\r\n            case \"LEFT\":\r\n                debugger\r\n                ctx.clearRect(this.x, this.y - 1, this.width, this.height + 2)\r\n                this.x = this.x - this.vel\r\n                break;\r\n            case \"UP\":\r\n                debugger\r\n                // ctx.clearRect(0, 0, 1080, 1920)\r\n                // ctx.clearRect(this.x, this.y - 1, this.width + 1, this.height + 2)\r\n                this.y = this.y - this.vel\r\n                this.hitpoint.y = this.y\r\n                _index__WEBPACK_IMPORTED_MODULE_3__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"DOWN\":\r\n                debugger\r\n                ctx.clearRect(this.x, this.y - 1, this.width, this.height + 2)\r\n                this.y = this.y + this.vel\r\n                break;\r\n        }\r\n        // ENEMIES.forEach(enemy => console.log(enemy))\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Laser);\n\n//# sourceURL=webpack:///./src/laser.js?");

/***/ }),

/***/ "./src/movable_object.js":
/*!*******************************!*\
  !*** ./src/movable_object.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass MoveableObject {\r\n    constructor(x, y, height, width, color, vel, ctx) {\r\n        \r\n        this.x = x;\r\n        this.y = y;\r\n        this.height = height;\r\n        this.width = width;\r\n        this.color = color\r\n        this.vel = vel\r\n        this.isMoving = true\r\n        this.hitPoints = 5\r\n    }\r\n    checkOutboundsTop(){\r\n        return this.y < 0\r\n    }\r\n    checkOutboundsBottom(){\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        return this.y + this.height > canvas.height \r\n    }\r\n    checkOutboundsRight(){\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        return this.x + this.width > canvas.width\r\n    }\r\n    checkOutboundsLeft(){\r\n        return this.x < 20\r\n    }\r\n    draw(ctx){\r\n        \r\n        ctx.fillStyle = this.color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height)\r\n    }\r\n    blink(ctx){\r\n        let blinkCount = 0\r\n        let blinkInterval = window.setInterval(() => {\r\n            if (blinkCount < 2) {\r\n                this.color === \"white\" ? this.color = \"red\" : this.color = \"white\"\r\n                this.draw(ctx)\r\n                blinkCount ++\r\n                console.log(\"BLINKING\")\r\n            } else {\r\n                window.clearInterval(blinkInterval)\r\n            }\r\n        }, 50)\r\n    }\r\n    wrap(pos){\r\n        return pos % 1920\r\n    }\r\n    startMoving(ctx){\r\n        let moveInterval = window.setInterval(() => {\r\n            if (this.isMoving){\r\n                this.move(ctx, \"RIGHT\")\r\n                this.draw(ctx)\r\n            } else {\r\n                window.clearInterval(moveInterval)\r\n            }\r\n        }, 100)\r\n    }\r\n    move(ctx, direction){\r\n        \r\n        switch(direction){\r\n            case \"RIGHT\":\r\n                \r\n                ctx.clearRect(this.x, this.y - 1, this.width, this.height + 2)\r\n                this.x = this.wrap(this.x + this.vel)\r\n                break;\r\n            case \"LEFT\":\r\n                \r\n                ctx.clearRect(this.x, this.y - 1, this.width, this.height + 2)\r\n                this.x = this.x - this.vel\r\n                break;\r\n            case \"UP\":\r\n                \r\n                ctx.clearRect(this.x, this.y - 1, this.width, this.height + 2)\r\n                this.y = this.y - this.vel\r\n                break;\r\n            case \"DOWN\":\r\n                \r\n                ctx.clearRect(this.x, this.y - 1, this.width, this.height + 2)\r\n                this.y = this.y + this.vel\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (MoveableObject);\n\n//# sourceURL=webpack:///./src/movable_object.js?");

/***/ }),

/***/ "./src/objective.js":
/*!**************************!*\
  !*** ./src/objective.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _immovable_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./immovable_object */ \"./src/immovable_object.js\");\n\r\nclass Objective extends _immovable_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor() {\r\n        super()\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        this.x = canvas.width / 2;\r\n        this.y = 10;\r\n        this.height = 50\r\n        this.width = 50\r\n        this.color = \"gray\"\r\n        this.hitPoints = 20\r\n    }\r\n    blink(ctx){\r\n        let blinkCount = 0\r\n        let blinkInterval = window.setInterval(() => {\r\n            if (blinkCount < 2) {\r\n                this.color === \"white\" ? this.color = \"gray\" : this.color = \"white\"\r\n                this.draw(ctx)\r\n                blinkCount ++\r\n                console.log(\"BLINKING\")\r\n            } else {\r\n                window.clearInterval(blinkInterval)\r\n            }\r\n        }, 50)\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Objective);\n\n//# sourceURL=webpack:///./src/objective.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _movable_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movable_object */ \"./src/movable_object.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n/* harmony import */ var _laser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./laser */ \"./src/laser.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass Player extends _movable_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(x, y, height, width, color, vel, ctx){\r\n        super(x, y, height, width, color, vel, ctx)\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        this.x = canvas.width / 2\r\n        this.y = canvas.height * 0.75\r\n        this.height = 30\r\n        this.width = 20\r\n        this.color= \"white\"\r\n        this.vel = 10\r\n        this.RIGHT = \"RIGHT\"\r\n        this.LEFT = \"LEFT\"\r\n        this.UP = \"UP\"\r\n        this.DOWN = \"DOWN\"\r\n        this.ctx = ctx\r\n        this.bindKeys(this.ctx)\r\n        this.hitPoints = 10\r\n    }\r\n    checkOutboundsTop(){\r\n        return this.y < 0\r\n    }\r\n    checkOutboundsBottom(){\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        return this.y + this.height > canvas.height \r\n    }\r\n    checkOutboundsRight(){\r\n        const canvas = document.getElementById(\"game-canvas\")\r\n        return this.x + this.width > canvas.width\r\n    }\r\n    checkOutboundsLeft(){\r\n        return this.x < 20\r\n    }\r\n    draw(ctx){\r\n        _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"].forEach(enemy => {\r\n            if (this.checkCollision(enemy)){\r\n                enemy.color = \"pink\"\r\n                enemy.draw(ctx)\r\n            } \r\n        })\r\n        ctx.fillStyle = this.color;\r\n        // ctx.rotate(10 * Math.PI / 180)    \r\n        ctx.beginPath()\r\n        ctx.moveTo(this.x, this.y)\r\n        ctx.lineTo(this.x + 10, this.y + 30)\r\n        ctx.lineTo(this.x - 10, this.y + 30)\r\n        ctx.fill()\r\n    }\r\n    rotate(ctx){\r\n        ctx.save();\r\n        ctx.translate(400, 400);\r\n        ctx.rotate(20 * Math.PI / 180);\r\n        this.draw(ctx)\r\n        // ctx.translate(-(20/2), -(30/2));\r\n        ctx.restore\r\n    }\r\n    checkCollision(object){\r\n        let top = this.y\r\n        let bottom = this.y + this.height\r\n        let left = this.x\r\n        let right = this.x + this.width\r\n        if (top > object.y + object.height || right < object.x || left > object.x + object.width || bottom < object.y){\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    blink(){\r\n        this.color = \"red\"\r\n        setTimeout(() => this.color = \"white\", 100)\r\n    }\r\n    move(ctx, direction){\r\n        switch(direction){\r\n            case \"RIGHT\":\r\n                this.x = this.x + this.vel\r\n                if (this.checkOutboundsRight()){\r\n                    this.x = this.x - this.vel\r\n                }\r\n                _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"].forEach(enemy => {\r\n                    if (this.checkCollision(enemy)){\r\n                        this.x = this.x - this.vel\r\n                    } \r\n                })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"LEFT\":\r\n                this.x = this.x - this.vel\r\n                if (this.checkOutboundsLeft()){\r\n                    this.x = this.x + this.vel\r\n                }\r\n                _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"].forEach(enemy => {\r\n                    if (this.checkCollision(enemy)){\r\n                        this.x = this.x + this.vel\r\n                    } \r\n                })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"UP\":\r\n                this.y = this.y - this.vel\r\n                if (this.checkOutboundsTop()){\r\n                    this.y = this.y + this.vel\r\n                }\r\n                _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"].forEach(enemy => {\r\n                    if (this.checkCollision(enemy)){\r\n                        this.y = this.y + this.vel\r\n                    } \r\n                })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n            case \"DOWN\":\r\n                \r\n                this.y = this.y + this.vel\r\n                if (this.checkOutboundsBottom()){\r\n                    this.y = this.y - this.vel\r\n                }\r\n                _game__WEBPACK_IMPORTED_MODULE_2__[\"ENEMIES\"].forEach(enemy => {\r\n                    if (this.checkCollision(enemy)){\r\n                        this.y = this.y - this.vel\r\n                    } \r\n                })\r\n                _index__WEBPACK_IMPORTED_MODULE_1__[\"GAME\"][0].draw()\r\n                break;\r\n        }\r\n    }\r\n    shoot(){\r\n        const laser = new _laser__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.x - 2.5, this.y - 20, 20, 5, \"yellow\", 30)\r\n        _game__WEBPACK_IMPORTED_MODULE_2__[\"LASERS\"].push(laser)\r\n        laser.draw(this.ctx)\r\n        requestAnimationFrame(() => laser.shoot(this.ctx))\r\n    }\r\n    bindKeys(ctx){\r\n        // document.addEventListener(\"mousedown\", e => {\r\n        //     \r\n        //     const shootInterval = window.setInterval(() => {\r\n        //         const laser = new Laser(player.x - 2.5, player.y - 20, 20, 5, \"yellow\", 10)\r\n        //         LASERS.push(laser)\r\n        //         laser.draw(this.ctx)\r\n        //         laser.shoot(this.ctx)\r\n        //     }, 250)\r\n        //     document.addEventListener(\"mouseup\", e => window.clearInterval(shootInterval))\r\n        // })\r\n        // document.addEventListener(\"click\", e => {\r\n        //     this.shoot()\r\n        // })\r\n        const playerMoveListener = document.addEventListener(\"keydown\", e => {\r\n            console.log(e)\r\n            switch (e.key){\r\n            case \"a\":\r\n                this.move(ctx, this.LEFT)\r\n                this.draw(ctx)\r\n                break;\r\n            case \"d\":\r\n                this.move(ctx, this.RIGHT)\r\n                this.draw(ctx)\r\n                break;\r\n            case \"s\":\r\n                this.move(ctx, this.DOWN)\r\n                this.draw(ctx)\r\n                break;\r\n            case \"w\":\r\n                this.move(ctx, this.UP)\r\n                this.draw(ctx)\r\n                break;\r\n            case \"f\":\r\n                alert(_game__WEBPACK_IMPORTED_MODULE_2__[\"BULLETS\"].map((bullet, idx) => idx + 1 ))\r\n                break;\r\n            case \"g\":\r\n                alert(_game__WEBPACK_IMPORTED_MODULE_2__[\"LISTENERS\"])\r\n                break;\r\n            }\r\n        })\r\n        _game__WEBPACK_IMPORTED_MODULE_2__[\"LISTENERS\"].push(playerMoveListener)\r\n       \r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\n\n//# sourceURL=webpack:///./src/player.js?");

/***/ })

/******/ });